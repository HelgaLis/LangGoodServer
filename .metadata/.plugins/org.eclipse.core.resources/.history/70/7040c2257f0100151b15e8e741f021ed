/*
 * interface.cpp
 *
 *  Created on: May 23, 2015
 *      Author: helgalis
 */

#include "interface.h"
#include "../global.h"
#include <unistd.h>
#include <stdio.h>
#include <sys/types.h>

#include <iostream>
#include <string.h>
#include <sstream>
using namespace std;

char* read_line() {
	char buffer[MAX_LINE_LEN];
	bool correct_line_received = false;
	    int offset = 0;
	    while (!correct_line_received) {
	        memset(buffer, 0, sizeof(buffer));
	        offset = 0;
	        bool read_successfull = true;
	        int delimiter_found = false;
	        while (read_successfull && offset < sizeof(buffer)) {

	            char rcv_char = read_byte();

	            if (offset == 0) {
	                if (rcv_char == END_OF_LINE[0] || rcv_char == END_OF_LINE[1]) {
	                        continue;
	                }
	            }

	            buffer[offset] = rcv_char;

	            if (offset >= 2) {
	                if (buffer[offset - 1] == END_OF_LINE[0]&&buffer[offset] == END_OF_LINE[1]) {

	                        correct_line_received = true;
	                        buffer[offset - 1] = '\0';
	                        break;
	                }
	            }
	            offset++;
	        };
	    }
	return buffer;
}
string getFirstWord(string &fLine){
	  static std::string result;
	    result.clear();

	    std::size_t position = fLine.find(' ');
	    if (string::npos != position)
	        return fLine.substr(0, position);

	    return fLine;
}
char read_byte(){
}
}
void start_engine() {
	string line = read_line();
}

